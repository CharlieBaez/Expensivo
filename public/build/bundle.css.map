{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Navbar.svelte",
    "../../Greeting.svelte",
    "../../ExpensesList.svelte",
    "../../ExpenseForm.svelte",
    "../../Totals.svelte",
    "../../Expense.svelte"
  ],
  "sourcesContent": [
    "<script>\n  //plugins\n  import { setContext, onMount, afterUpdate } from \"svelte\";\n\n  //components\n  import Navbar from \"./Navbar.svelte\";\n  import UserModal from \"./UserModal.svelte\";\n  import UserNameForm from \"./UserNameForm.svelte\";\n  import Greeting from \"./Greeting.svelte\";\n  import ExpensesList from \"./ExpensesList.svelte\";\n  import Totals from \"./Totals.svelte\";\n  import ExpenseForm from \"./ExpenseForm.svelte\";\n  import Modal from \"./Modal.svelte\";\n\n  //data,loaclStorage management\n  const setLocalStorage = () => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n    localStorage.setItem(\"UserInfoName\", JSON.stringify(UserInfoName));\n  };\n  onMount(() => {\n    expenses = localStorage.getItem(\"expenses\")\n      ? JSON.parse(localStorage.getItem(\"expenses\"))\n      : [];\n    UserInfoName = localStorage.getItem(\"UserInfoName\")\n      ? JSON.parse(localStorage.getItem(\"UserInfoName\"))\n      : \"\";\n    UserForm = localStorage.getItem(\"UserInfoName\") ? false : true;\n  });\n  afterUpdate(() => {\n    setLocalStorage();\n  });\n\n  //variables\n  let expenses = [];\n  let UserInfoName = \"\";\n  let setItemName = \"\";\n  let setAmount = null;\n  let setDate = null;\n  let setNotes = \"\";\n  let setId = null;\n  let isFormOpen = false;\n  let UserForm = false;\n  //functions\n  const showUserForm = () => (UserForm = true);\n  const hideUserForm = () => {\n    UserForm = false;\n  };\n  const showForm = () => (isFormOpen = true);\n  const hideForm = () => {\n    isFormOpen = false;\n    setId = null;\n    setAmount = null;\n    setItemName = \"\";\n    setDate = null;\n    setNotes = \"\";\n  };\n\n  const removeExpense = id => {\n    expenses = expenses.filter(listItem => listItem.id !== id);\n  };\n\n  const clearExpenses = () => {\n    const confirmDelete = confirm(\n      \"Are you sure you would like to delete your Expense List?\"\n    );\n    if (confirmDelete) {\n      expenses = [];\n    } else {\n      return;\n    }\n  };\n\n  const addExpense = ({ itemName, amount, date, notes }) => {\n    let expense = {\n      id: Math.random() * Date.now(),\n      itemName,\n      amount,\n      date,\n      notes\n    };\n    expenses = [...expenses, expense];\n  };\n\n  const setModifiedExpense = id => {\n    let expense = expenses.find(listItem => listItem.id === id);\n    setId = expense.id;\n    setItemName = expense.itemName;\n    setAmount = expense.amount;\n    setDate = expense.date;\n    setNotes = expense.notes;\n    showForm();\n  };\n\n  const editExpense = ({ itemName, amount, date, notes }) => {\n    expenses = expenses.map(listItem => {\n      return listItem.id === setId\n        ? { ...listItem, itemName, amount, date, notes }\n        : { ...listItem };\n    });\n    setId = null;\n    setAmount = null;\n    setItemName = \"\";\n    setDate = null;\n    setNotes = \"\";\n  };\n\n  const addUserInfo = ({ userName, email }) => {\n    UserInfoName = userName;\n  };\n  //reactivity\n  $: total = expenses.reduce((acc, curr) => {\n    return (acc += curr.amount);\n  }, 0);\n  $: isEditing = setId ? true : false;\n  //context\n  setContext(\"remove\", removeExpense);\n  setContext(\"modify\", setModifiedExpense);\n</script>\n\n<style>\n  main {\n    margin-bottom: 6rem;\n  }\n</style>\n\n<Navbar />\n<main class=\"content\">\n  {#if UserForm}\n    <UserModal>\n      <UserNameForm {addUserInfo} {isEditing} {hideUserForm} />\n    </UserModal>\n  {/if}\n  {#if isFormOpen}\n    <Modal>\n      <ExpenseForm\n        {addExpense}\n        itemName={setItemName}\n        amount={setAmount}\n        date={setDate}\n        notes={setNotes}\n        {isEditing}\n        {editExpense}\n        {hideForm} />\n    </Modal>\n  {/if}\n  <Greeting {UserInfoName} {showUserForm} />\n  <Totals SectionHeader=\"total expenses\" {total} />\n  <ExpensesList {expenses} {showForm} />\n  <button\n    type=\"button\"\n    class=\"btn btn-primary btn-block\"\n    on:click={clearExpenses}>\n    Clear expenses\n  </button>\n</main>\n",
    "<script>\n\n</script>\n\n<style type=\"text/scss\">\n  .tagline {\n    color: var(--button);\n    margin-left: 10px;\n    font-style: italic;\n  }\n</style>\n\n<nav class=\"nav\">\n  <div class=\"nav-center\">\n    <h1 class=\"nav-title\">Â¡Expensivo!</h1>\n    <div class=\"tagline\">\n      ...the best way to stick to a budget is to start one\n    </div>\n  </div>\n</nav>\n",
    "<script>\n  //plugin\n  import { getContext } from \"svelte\";\n  //components\n  //props\n  export let UserInfoName = \"\";\n  export let showUserForm;\n\n  //variables\n  let todayDate = new Date();\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n</script>\n\n<style type=\"text/scss\">\n  section {\n    margin-bottom: 3rem;\n  }\n  h1 {\n    font-size: 5vw;\n    position: relative;\n  }\n  h1:hover button {\n    opacity: 1;\n  }\n\n  button {\n    position: absolute;\n    bottom: 0;\n    right: -10px;\n    opacity: 0;\n    transition: var(--mainTransition);\n    color: var(--button);\n  }\n  button:hover {\n    color: var(--buttonHover);\n    transform: scale(1.2);\n  }\n  span {\n    color: var(--button);\n  }\n  h2 {\n    font-size: 3vw;\n  }\n</style>\n\n<section>\n  <div class=\"todays-date\">\n    {todayDate.getDate()} {months[todayDate.getMonth()]}, {todayDate.getFullYear()}\n  </div>\n  <h1>\n    Hello\n    {#if UserInfoName}\n      ,\n      <br />\n      <span>{UserInfoName}</span>\n    {/if}\n    !\n    <button class=\"expense-btn edit-btn\" on:click={showUserForm}>\n      <i class=\"fas fa-pen\" />\n    </button>\n  </h1>\n  {#if UserInfoName}\n    <h2>welcome back</h2>\n  {/if}\n\n</section>\n",
    "<script>\n  //plugins\n  import { fly } from \"svelte/transition\";\n  import { flip } from \"svelte/animate\";\n  //components\n  import SectionHeader from \"./SectionHeader.svelte\";\n  import Expense from \"./Expense.svelte\";\n\n  //props\n  export let showForm;\n  export let expenses = [];\n</script>\n\n<style>\n  h2 {\n    text-transform: capitalize;\n  }\n  section {\n    margin-bottom: 5rem;\n  }\n  .header-row {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n  }\n  button {\n    background-color: transparent;\n    color: var(--button);\n    margin-left: auto;\n  }\n</style>\n\n<section>\n  <div class=\"header-row\">\n    <SectionHeader SectionHeader=\"expense list\" />\n    <button type=\"button\" class=\"btn-primary\" on:click={showForm}>\n      <i class=\"far fa-plus-square\" />\n      Add a New Expense\n    </button>\n  </div>\n  <ul>\n    {#each expenses as expense, index (expense.id)}\n      <li\n        animate:flip\n        in:fly={{ x: 200, delay: index * 100 }}\n        out:fly={{ x: -200 }}>\n        <Expense {...expense} />\n      </li>\n    {:else}\n      <h2>Currently you have no expenses!</h2>\n    {/each}\n  </ul>\n\n</section>\n",
    "<script>\n  //components\n  import SectionHeader from \"./SectionHeader.svelte\";\n\n  //props\n  export let addExpense;\n  export let itemName = \"\";\n  export let amount = null;\n  export let date = null;\n  export let notes = \"\";\n  export let isEditing;\n  export let editExpense;\n  export let hideForm;\n  //variables\n  //functions\n\n  const handleSubmit = e => {\n    if (isEditing) {\n      editExpense({ itemName, amount, date, notes });\n    } else {\n      addExpense({ itemName, amount, date, notes });\n    }\n    itemName = \"\";\n    amount = null;\n    date = null;\n    notes = \"\";\n    hideForm();\n  };\n\n  //reactivity\n  $: isEmpty = !itemName || !amount;\n</script>\n\n<style>\n  textarea {\n    width: 100%;\n  }\n</style>\n\n<section class=\"form\">\n  <SectionHeader SectionHeader=\"add expense\" />\n  <form action=\"\" class=\"expense-form\" on:submit|preventDefault={handleSubmit}>\n    <div class=\"form-control\">\n      <label for=\"name\">Expense name*</label>\n      <input type=\"text\" id=\"name\" bind:value={itemName} />\n    </div>\n    <div class=\"form-control\">\n      <label for=\"amount\">Expense Ammount*</label>\n      <input type=\"number\" id=\"amount\" bind:value={amount} />\n    </div>\n    <div class=\"form-control\">\n      <label for=\"date\">Expense Due Date</label>\n      <input type=\"date\" id=\"date\" bind:value={date} />\n    </div>\n    <div class=\"form-control\">\n      <label for=\"notes\">Expense Notes</label>\n      <textarea type=\"text\" rows=\"5\" col=\"100\" id=\"notes\" bind:value={notes} />\n    </div>\n\n    {#if isEmpty}\n      <p class=\"form-empty\">*Please fill out required fields</p>\n    {/if}\n    <button\n      type=\"submit\"\n      class=\"btn btn-block btn-primary\"\n      class:disabled={isEmpty}\n      disabled={isEmpty}>\n\n      {#if isEditing}Update expense{:else}Add expense{/if}\n    </button>\n    <button type=\"button\" class=\"close-btn\" on:click={hideForm}>\n      <i class=\"fas fa-times\" />\n      close\n    </button>\n  </form>\n</section>\n",
    "<script>\n  //props\n  export let SectionHeader = \"Section Header\";\n  export let total = 0;\n</script>\n\n<style>\n  section {\n    margin: 2rem 0;\n  }\n  span {\n    background: LightSeaGreen;\n  }\n</style>\n\n<section class=\"main-title\">\n  <h2>\n    {SectionHeader}:\n    <span>${total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</span>\n  </h2>\n</section>\n",
    "<script>\n  //plugin\n  import { getContext } from \"svelte\";\n  import { slide } from \"svelte/transition\";\n  //props\n  export let id;\n  export let itemName = \"Misc\";\n  export let amount = 0;\n  export let date = null;\n  export let notes = \"\";\n\n  //variables\n  let displayAmount = false;\n\n  //funtions\n  const toggleAmountDisplay = () => (displayAmount = !displayAmount);\n\n  //context\n  const removeExpense = getContext(\"remove\");\n  const setModifiedExpense = getContext(\"modify\");\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n  h2 {\n    font-family: \"Roboto\", sans-serif;\n  }\n  button {\n    transition: var(--mainTransition);\n    color: var(--button);\n  }\n  button:hover {\n    color: var(--buttonHover);\n    transform: scale(1.2);\n  }\n</style>\n\n<article class=\"single-expense\">\n  <div class=\"expense-info\">\n    <h2>\n      {itemName}\n      <button class=\"amount-btn\" on:click={toggleAmountDisplay}>\n        <i class=\"fas fa-caret-down\" />\n      </button>\n    </h2>\n    {#if displayAmount}\n      <h4 transition:slide>\n        amount: ${amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </h4>\n      <h4 transition:slide>due date: {date}</h4>\n      <h4 transition:slide>notes: {notes}</h4>\n    {/if}\n  </div>\n  <div class=\"expense-buttons\">\n    <button\n      class=\"expense-btn edit-btn\"\n      on:click={() => setModifiedExpense(id)}>\n      <i class=\"fas fa-pen\" />\n    </button>\n    <button class=\"expense-btn delete-btn\" on:click={() => removeExpense(id)}>\n      <i class=\"fas fa-trash\" />\n    </button>\n  </div>\n</article>\n"
  ],
  "names": [],
  "mappings": "AAwHE,IAAI,eAAC,CAAC,AACJ,aAAa,CAAE,IAAI,AACrB,CAAC;ACrHD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC;ACkBD,OAAO,8BAAC,CAAC,AACP,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,EAAE,8BAAC,CAAC,AACF,SAAS,CAAE,GAAG,CACd,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,iBAAE,MAAM,CAAC,MAAM,eAAC,CAAC,AACf,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,gBAAgB,CAAC,CACjC,KAAK,CAAE,IAAI,QAAQ,CAAC,AACtB,CAAC,AACD,oCAAM,MAAM,AAAC,CAAC,AACZ,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,SAAS,CAAE,MAAM,GAAG,CAAC,AACvB,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,KAAK,CAAE,IAAI,QAAQ,CAAC,AACtB,CAAC,AACD,EAAE,8BAAC,CAAC,AACF,SAAS,CAAE,GAAG,AAChB,CAAC;ACzCD,EAAE,cAAC,CAAC,AACF,cAAc,CAAE,UAAU,AAC5B,CAAC,AACD,OAAO,cAAC,CAAC,AACP,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,UAAU,AACzB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,WAAW,CAC7B,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,WAAW,CAAE,IAAI,AACnB,CAAC;ACKD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACb,CAAC;AC7BD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,aAAa,AAC3B,CAAC;ACWD,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,QAAQ,CAAC,CAAC,UAAU,AACnC,CAAC,AACD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,gBAAgB,CAAC,CACjC,KAAK,CAAE,IAAI,QAAQ,CAAC,AACtB,CAAC,AACD,qBAAM,MAAM,AAAC,CAAC,AACZ,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,SAAS,CAAE,MAAM,GAAG,CAAC,AACvB,CAAC"
}